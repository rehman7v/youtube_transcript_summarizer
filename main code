import os 
import warnings 
from transformers import pipeline 
from youtube_transcript_api import YouTubeTranscriptApi 
from IPython.display import YouTubeVideo 
# Suppress TensorFlow warnings 
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'  
warnings.filterwarnings("ignore", category=DeprecationWarning)  
# Define the YouTube video URL and extract the video ID 
youtube_video = "https://www.youtube.com/watch?v=A4OmtyaBHFE" 
video_id = youtube_video.split("=")[1] 
# Display the YouTube video 
YouTubeVideo(video_id) 
# Get the transcript of the YouTube video 
transcript = YouTubeTranscriptApi.get_transcript(video_id) 
# Combine the transcript into a single string 
result = "" 
for i in transcript: 
result += ' ' + i['text'] 
# Print the length of the combined transcript 
print(len(result)) 
# Calculate the number of iterations needed to process chunks of 500 characters 
chunk_size = 500 
num_iters = int(len(result) / chunk_size) 
# Initialize the summarization pipeline with a specific model 
summarizer = pipeline("summarization", model="facebook/bart-large-cnn") 
DEPARTMENT OF CES(AI&ML) 
26                 
YOUTUBE TRANSCRIPT SUMMARIZER 
# Initialize a list to store the summarized text 
summarized_text = [] 
# Loop through the transcript in chunks of 500 characters and summarize each chunk 
for i in range(0, num_iters + 1): 
start = i * chunk_size 
end = (i + 1) * chunk_size 
print("input text \n" + result[start:end]) 
out = summarizer(result[start:end]) 
out = out[0] 
out = out['summary_text'] 
print("Summarized text\n" + out) 
summarized_text.append(out) 
# Print the summarized text 
print(summarized_text) 
